name: "ALKiln: Automated docassemble tests"
description: "Automatically test any docassemble interview in a any branch on your GitHub repository whenever you commit or push. See https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/automated_integrated_testing."

inputs:
  SERVER_URL:
    description: 'The url of your docassemble server. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_EMAIL:
    description: 'The email of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_PASSWORD:
    description: 'The password of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_ID:
    description: 'The id of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  EXTRA_LANGUAGES:
    description: 'Other languages you want to test. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
    default: ''
    # TODO: Check if we really need the `if` for extra languages that we used to have

runs:
  using: "composite"
  steps:
    # - name: "ALKiln: Install node package manager"
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: "12"
    # - run: npm install
    #   shell: bash

    # - name: test langs
    #   run: |
    #     echo "secret: ${{ inputs.EXTRA_LANGUAGES }}"
    #     echo "manual: ${{ github.event.inputs.extra_languages }}"
    #   shell: bash
    # # If extra languages were set manually, override the repository
    # # EXTRA_LANGUAGES secret with the manually set values
    # - run: echo "EXTRA_LANGUAGES=${{ github.event.inputs.extra_languages }}" >> $GITHUB_ENV
    #   if: ${{ github.event.inputs.extra_languages != '' }}
    #   shell: bash
    # # If NO extra languages were set manually, use the repo EXTRA_LANGUAGES secret
    # - run: echo "EXTRA_LANGUAGES=${{ inputs.EXTRA_LANGUAGES }}" >> $GITHUB_ENV
    #   if: ${{ github.event.inputs.extra_languages == '' }}
    #   shell: bash
    # - run: |
    #     echo "${{ github.event.inputs.extra_languages != '' }}"
    #     if "${{ github.event.inputs.extra_languages != '' }}"
    #     then
    #       echo "EXTRA_LANGUAGES=${{ github.event.inputs.extra_languages }}" >> $GITHUB_ENV
    #     else
    #       echo "EXTRA_LANGUAGES=${{ inputs.EXTRA_LANGUAGES }}" >> $GITHUB_ENV
    #     fi
    #     echo "secret: ${{ inputs.EXTRA_LANGUAGES }}"
    #     echo "manual: ${{ github.event.inputs.extra_languages }}"
    #     echo "Actual: $EXTRA_LANGUAGES"
    #   shell: bash

    # Run all the node commands. `env:` vars only exist inside the specific `run:`
    - name: "ALKiln: Run tests"
      env:
        REPO_URL: "${{ github.server_url }}/${{ github.repository }}"
        BRANCH_PATH: "${{ github.ref }}"
        BASE_URL: "${{ inputs.SERVER_URL }}"
        PLAYGROUND_EMAIL: "${{ inputs.PLAYGROUND_EMAIL }}"
        PLAYGROUND_PASSWORD: "${{ inputs.PLAYGROUND_PASSWORD }}"
        PLAYGROUND_ID: "${{ inputs.PLAYGROUND_ID }}"
        # EXTRA_LANGUAGES_INPUT: "${{ inputs.EXTRA_LANGUAGES }}"
      # If extra languages were set manually, override the repository
      # EXTRA_LANGUAGES secret with the manually set values
      # Also, the npm commands one-liner doesn't print to GitHub, unfortunately. It may be
      # worth splitting up the commands into their own `runs`, despite the duplication
      run: |
        if ${{ github.event.inputs.extra_languages != '' }}
        then
          echo "Manually set languages: ${{ github.event.inputs.extra_languages }}"
          EXTRA_LANGUAGES="${{ github.event.inputs.extra_languages }}"
          echo "EXTRA_LANGUAGES=${EXTRA_LANGUAGES}" >> $GITHUB_ENV
        else
          echo "Use EXTRA_LANGUAGES secret: ${{ inputs.EXTRA_LANGUAGES }}"
          EXTRA_LANGUAGES="${{ inputs.EXTRA_LANGUAGES }}"
          echo "EXTRA_LANGUAGES=${EXTRA_LANGUAGES}" >> $GITHUB_ENV
        fi
        echo -e "\nRepo is $REPO_URL\nBranch is $BRANCH_PATH\nLanguages to test are $EXTRA_LANGUAGES\nOther information is secret\n"
      shell: bash
      #npm run setup && npm run test -- ${{ github.event.inputs.tags && format('"--tags" "{0}"', github.event.inputs.tags) }}; npm run takedown
    - run: echo -e "\nNext step:\nLanguages to test are $EXTRA_LANGUAGES\nOther information is secret\n"
      shell: bash
    # # Upload artifacts users can download on the Actions summary page
    # - name: "ALKiln: Upload errors to action summary artifacts"
    #   if: ${{ failure() }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: errors
    #     path: ./**/error*.jpg
    # - name: "ALKiln: Upload screenshots to action summary artifacts"
    #   if: ${{ always() }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: screenshots
    #     path: ./**/screenshot*.jpg
    # - name: "ALKiln: Upload downloaded files to action summary artifacts"
    #   if: ${{ always() }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: downloads
    #     path: ./**/downloads_*
    # - name: "ALKiln: Upload report to action summary artifacts"
    #   if: ${{ always() }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: report
    #     path: ./**/*_report_*
