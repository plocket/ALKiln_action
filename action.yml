name: "ALKiln: Automated docassemble tests"
description: "Automatically test any docassemble interview in a any branch on your GitHub repository whenever you commit or push. See https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/automated_integrated_testing."

inputs:
  SERVER_URL:
    description: 'The url of your docassemble server. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_EMAIL:
    description: 'The email of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_PASSWORD:
    description: 'The password of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  PLAYGROUND_ID:
    description: 'The id of your docassemble testing account. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
  EXTRA_LANGUAGES:
    description: 'Other languages you want to test. This should be in your GitHub SECRETS or the SECRETS of your org.'
    required: true
    default: ''
    # TODO: Check if we really need the `if` for extra languages that we used to have

runs:
  using: "composite"
  steps:
    # Install node
    - name: "ALKiln: Install node package manager"
      uses: actions/setup-node@v1
      with:
        node-version: "12"
    - run: npm install
      shell: bash

    # Set environment variables
    - name: "ALKiln: Set environment variables"
      # If extra languages were set manually, override the repository
      # EXTRA_LANGUAGES secret with the manually set values
      run: |
        if ${{ github.event.inputs.extra_languages != '' }}
        then
          echo "Manually set languages: ${{ github.event.inputs.extra_languages }}"
          echo "EXTRA_LANGUAGES=${{ github.event.inputs.extra_languages }}" >> $GITHUB_ENV
        else
          echo "Use EXTRA_LANGUAGES secret: ${{ inputs.EXTRA_LANGUAGES }}"
          echo "EXTRA_LANGUAGES=${{ inputs.EXTRA_LANGUAGES }}" >> $GITHUB_ENV
        fi
        echo "REPO_URL=${{ github.server_url }}/${{ github.repository }}" >> $GITHUB_ENV
        echo "BRANCH_PATH=${{ github.ref }}" >> $GITHUB_ENV
        echo "BASE_URL=${{ inputs.SERVER_URL }}" >> $GITHUB_ENV
        echo "PLAYGROUND_EMAIL=${{ inputs.PLAYGROUND_EMAIL }}" >> $GITHUB_ENV
        echo "PLAYGROUND_PASSWORD=${{ inputs.PLAYGROUND_PASSWORD }}" >> $GITHUB_ENV
        echo "PLAYGROUND_ID=${{ inputs.PLAYGROUND_ID }}" >> $GITHUB_ENV
      shell: bash
    - name: "ALKiln: confirm info"
      run: echo -e "\nRepo is $REPO_URL\nBranch ref is $BRANCH_PATH\nManually added languages are $EXTRA_LANGUAGES\nOther data is secret\n"
      shell: bash

    # Run tests
    - name: "ALKiln: Create a Project and pull the package from GitHub"
      run: npm run setup
      shell: bash
    - name: "ALKiln: Run tests"
      if: ${{ success() }}
      run: npm run test -- ${{ github.event.inputs.tags && format('"--tags" "{0}"', github.event.inputs.tags) }}
      shell: bash
    - run: echo -e "\n\n====ALKiln could not create a project on your server's testing account or pull your package into it. Check the messages above this line.\n\n"
      if: ${{ failure() }}
      shell: bash
    - name: "ALKiln: Delete project from docassemble test account"
      if: ${{ always() }}
      run: npm run takedown
      shell: bash

    # Upload artifacts users can download on the Actions summary page
    - name: "ALKiln: Upload errors to action summary artifacts"
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: errors
        path: ./**/error*.jpg
    - name: "ALKiln: Upload screenshots to action summary artifacts"
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: screenshots
        path: ./**/screenshot*.jpg
    - name: "ALKiln: Upload downloaded files to action summary artifacts"
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: downloads
        path: ./**/downloads_*
    - name: "ALKiln: Upload report to action summary artifacts"
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: report
        path: ./**/*_report_*
